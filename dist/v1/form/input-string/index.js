"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useState, } from "react";
import { fnCss } from "nextjs-tools";
import Image from "next/image";
import ImgCross from "web-asset/svg/regular/fi-rr-cross.svg";
export default function ({ placeholder = "", imgSrc, regexp, invalidMessage, defaultValue = "", onChange = () => { }, onKeyEnter = () => { }, name, disabled, className = "", autoComplete, inputMode, type, required, label, inputParser = (e) => e.target.value, children, }) {
    const [invalid, setInvalid] = useState(false);
    const [value, setValue] = useState(defaultValue);
    const [focus, setFocus] = useState(false);
    useEffect(() => {
        setValue(defaultValue);
    }, [defaultValue]);
    const onKeyDownHandler = (e) => {
        if (e.key !== "Enter")
            return;
        onKeyEnter(value);
    };
    const onChangeHandler = (e) => {
        const str = inputParser(e);
        onChange(str);
        setValue(str);
        setInvalid(!new RegExp(regexp || "").test(str));
    };
    return (_jsxs("div", { className: className, children: [label && _jsx("p", { className: "mb-[-5px]", children: label }), _jsxs("div", { className: "flex w-full items-top", children: [_jsxs("div", { className: fnCss.sum("relative", "flex items-center border-all rounded-md h-[2.5rem] overflow-hidden", "grow", focus ? "border-(--primary)" : "", invalid && value ? "border-(--danger)" : ""), children: [imgSrc && (_jsx("div", { className: fnCss.sum("border-right h-full flex pl-2 pr-2", disabled ? "bg-(--dark)" : "bg-(--primary)", focus ? "border-(--primary)" : ""), children: _jsx(Image, { className: fnCss.sum("no-drag", disabled ? "filter-(--dark-alt-filter)" : "filter-(--primary-alt-filter)"), src: imgSrc, alt: "icon", width: 25, height: 25 }) })), _jsx("input", { placeholder, disabled, name, autoComplete, inputMode, type, required, onChange: onChangeHandler, className: "outline-none w-full pl-2 pr-2 grow", onKeyDown: onKeyDownHandler, onFocus: () => setFocus(true), onBlur: () => setFocus(false), value: value, title: invalidMessage }), value && (_jsx(Image, { src: ImgCross, alt: "clear", width: 20, height: 20, onClick: () => {
                                    setValue("");
                                    onChange("");
                                }, className: "absolute right-0 top-0 h-[2.5rem] no-drag mr-2 filter-(--text-2-filter) hover:filter-(--primary-filter)" }))] }), children && _jsx("div", { className: "ml-2", children: children })] }), _jsx("div", { className: "min-h-[1.5rem] pl-2 text-(--danger)", children: invalid && invalidMessage })] }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdjEvZm9ybS9pbnB1dC1zdHJpbmcvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFDYixPQUFjLEVBTWIsU0FBUyxFQUNULFFBQVEsR0FDUixNQUFNLE9BQU8sQ0FBQztBQUNmLE9BQU8sRUFBUyxLQUFLLEVBQWlDLE1BQU0sY0FBYyxDQUFDO0FBQzNFLE9BQU8sS0FBSyxNQUFNLFlBQVksQ0FBQztBQUMvQixPQUFPLFFBQVEsTUFBTSx1Q0FBdUMsQ0FBQztBQXVCN0QsTUFBTSxDQUFDLE9BQU8sV0FBVyxFQUN4QixXQUFXLEdBQUcsRUFBRSxFQUNoQixNQUFNLEVBQ04sTUFBTSxFQUNOLGNBQWMsRUFDZCxZQUFZLEdBQUcsRUFBRSxFQUNqQixRQUFRLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQyxFQUNuQixVQUFVLEdBQUcsR0FBRyxFQUFFLEdBQUUsQ0FBQyxFQUNyQixJQUFJLEVBQ0osUUFBUSxFQUNSLFNBQVMsR0FBRyxFQUFFLEVBQ2QsWUFBWSxFQUNaLFNBQVMsRUFDVCxJQUFJLEVBQ0osUUFBUSxFQUNSLEtBQUssRUFDTCxXQUFXLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUNuQyxRQUFRLEdBQ1M7SUFDakIsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUMsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDakQsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFMUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtRQUNkLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN4QixDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBRW5CLE1BQU0sZ0JBQWdCLEdBQTJDLENBQUMsQ0FBQyxFQUFFLEVBQUU7UUFDdEUsSUFBSSxDQUFDLENBQUMsR0FBRyxLQUFLLE9BQU87WUFBRSxPQUFPO1FBQzlCLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuQixDQUFDLENBQUM7SUFFRixNQUFNLGVBQWUsR0FBeUMsQ0FBQyxDQUFDLEVBQUUsRUFBRTtRQUNuRSxNQUFNLEdBQUcsR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0IsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsVUFBVSxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUMsQ0FBQztJQUVGLE9BQU8sQ0FDTixlQUFLLFNBQVMsRUFBRSxTQUFTLGFBQ3ZCLEtBQUssSUFBSSxZQUFHLFNBQVMsRUFBQyxXQUFXLFlBQUUsS0FBSyxHQUFLLEVBQzlDLGVBQUssU0FBUyxFQUFDLHVCQUF1QixhQUNyQyxlQUNDLFNBQVMsRUFBRSxLQUFLLENBQUMsR0FBRyxDQUNuQixVQUFVLEVBQ1Ysb0VBQW9FLEVBQ3BFLE1BQU0sRUFDTixLQUFLLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ2pDLE9BQU8sSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLG1CQUFtQixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQzNDLGFBQ0EsTUFBTSxJQUFJLENBQ1YsY0FDQyxTQUFTLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FDbkIsb0NBQW9DLEVBQ3BDLFFBQVEsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsRUFDM0MsS0FBSyxDQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUNqQyxZQUNELEtBQUMsS0FBSyxJQUNMLFNBQVMsRUFBRSxLQUFLLENBQUMsR0FBRyxDQUNuQixTQUFTLEVBQ1QsUUFBUSxDQUFDLENBQUMsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLENBQUMsK0JBQStCLENBQ3pFLEVBQ0QsR0FBRyxFQUFFLE1BQU0sRUFDWCxHQUFHLEVBQUMsTUFBTSxFQUNWLEtBQUssRUFBRSxFQUFFLEVBQ1QsTUFBTSxFQUFFLEVBQUUsR0FDVCxHQUNHLENBQ04sRUFFRCxnQkFDTSxXQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQ3pFLFFBQVEsRUFBRSxlQUFlLEVBQ3pCLFNBQVMsRUFBQyxvQ0FBb0MsRUFDOUMsU0FBUyxFQUFFLGdCQUFnQixFQUMzQixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUM3QixNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUM3QixLQUFLLEVBQUUsS0FBSyxFQUNaLEtBQUssRUFBRSxjQUFjLEdBQ3BCLEVBRUQsS0FBSyxJQUFJLENBQ1QsS0FBQyxLQUFLLElBQ0wsR0FBRyxFQUFFLFFBQVEsRUFDYixHQUFHLEVBQUMsT0FBTyxFQUNYLEtBQUssRUFBRSxFQUFFLEVBQ1QsTUFBTSxFQUFFLEVBQUUsRUFDVixPQUFPLEVBQUUsR0FBRyxFQUFFO29DQUNiLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztvQ0FDYixRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7Z0NBQ2QsQ0FBQyxFQUNELFNBQVMsRUFBQyx5R0FBeUcsR0FDbEgsQ0FDRixJQUNJLEVBQ0wsUUFBUSxJQUFJLGNBQUssU0FBUyxFQUFDLE1BQU0sWUFBRSxRQUFRLEdBQU8sSUFDOUMsRUFFTixjQUFLLFNBQVMsRUFBQyxxQ0FBcUMsWUFBRSxPQUFPLElBQUksY0FBYyxHQUFPLElBQ2pGLENBQ04sQ0FBQztBQUNILENBQUMifQ==