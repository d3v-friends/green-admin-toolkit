"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { fnCss } from "nextjs-tools";
import Image from "next/image";
import ImgCross from "web-asset/svg/regular/fi-rr-cross.svg";
export default function ({ label, className, imgSrc, value, onChange, name = {}, inputParser }) {
    return (_jsxs("div", { className: className, children: [label && _jsx("p", { className: "mb-[-5px]", children: label }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-2 lg:gap-4", children: [_jsx(Input, { name: name === null || name === void 0 ? void 0 : name.before, imgSrc: imgSrc, value: value.before, onChange: (before) => onChange(Object.assign(Object.assign({}, value), { before })), inputParser: inputParser }), _jsx(Input, { name: name === null || name === void 0 ? void 0 : name.after, value: value.after, onChange: (after) => onChange(Object.assign(Object.assign({}, value), { after })), inputParser: inputParser })] })] }));
}
function Input({ value, onChange, imgSrc, name, inputParser = (e) => e.target.value, }) {
    return (_jsxs("div", { className: fnCss.sum("flex items-center border-all rounded-md h-[2.5rem] overflow-hidden"), children: [imgSrc && (_jsx("div", { className: fnCss.sum("border-right h-full flex pl-2 pr-2 bg-(--primary)"), children: _jsx(Image, { className: fnCss.sum("no-drag filter-(--primary-alt-filter)"), src: imgSrc, alt: "icon", width: 25, height: 25 }) })), _jsx("input", { name: name, className: "grow pl-2 pr-2 outline-none", value: value || "", onChange: (e) => onChange(inputParser(e)) }), value && (_jsx("button", { onClick: () => onChange(""), children: _jsx(Image, { src: ImgCross, alt: "clear", width: 20, height: 20, className: "no-drag mr-2 w-[0.7rem] filter-(--text-2-filter) hover:filter-(--primary-filter)" }) }))] }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcC9mb3JtL2lucHV0LWJldHdlZW4vaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFFYixPQUFPLEVBQVMsS0FBSyxFQUFTLE1BQU0sY0FBYyxDQUFDO0FBQ25ELE9BQU8sS0FBSyxNQUFNLFlBQVksQ0FBQztBQUMvQixPQUFPLFFBQVEsTUFBTSx1Q0FBdUMsQ0FBQztBQWtCN0QsTUFBTSxDQUFDLE9BQU8sV0FBVyxFQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsSUFBSSxHQUFHLEVBQUUsRUFBRSxXQUFXLEVBQWtCO0lBQzVHLE9BQU8sQ0FDTixlQUFLLFNBQVMsRUFBRSxTQUFTLGFBQ3ZCLEtBQUssSUFBSSxZQUFHLFNBQVMsRUFBQyxXQUFXLFlBQUUsS0FBSyxHQUFLLEVBQzlDLGVBQUssU0FBUyxFQUFDLGdEQUFnRCxhQUM5RCxLQUFDLEtBQUssSUFDTCxJQUFJLEVBQUUsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLE1BQU0sRUFDbEIsTUFBTSxFQUFFLE1BQU0sRUFDZCxLQUFLLEVBQUUsS0FBSyxDQUFDLE1BQU0sRUFDbkIsUUFBUSxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxRQUFRLGlDQUFLLEtBQUssS0FBRSxNQUFNLElBQUUsRUFDbEQsV0FBVyxFQUFFLFdBQVcsR0FDdkIsRUFFRixLQUFDLEtBQUssSUFDTCxJQUFJLEVBQUUsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLEtBQUssRUFDakIsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQ2xCLFFBQVEsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsUUFBUSxpQ0FBSyxLQUFLLEtBQUUsS0FBSyxJQUFFLEVBQ2hELFdBQVcsRUFBRSxXQUFXLEdBQ3ZCLElBQ0csSUFDRCxDQUNOLENBQUM7QUFDSCxDQUFDO0FBRUQsU0FBUyxLQUFLLENBQUMsRUFDZCxLQUFLLEVBQ0wsUUFBUSxFQUNSLE1BQU0sRUFDTixJQUFJLEVBQ0osV0FBVyxHQUFHLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssR0FPbEM7SUFDRCxPQUFPLENBQ04sZUFBSyxTQUFTLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxvRUFBb0UsQ0FBQyxhQUM3RixNQUFNLElBQUksQ0FDVixjQUFLLFNBQVMsRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLG1EQUFtRCxDQUFDLFlBQzdFLEtBQUMsS0FBSyxJQUNMLFNBQVMsRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDLHVDQUF1QyxDQUFDLEVBQzdELEdBQUcsRUFBRSxNQUFNLEVBQ1gsR0FBRyxFQUFDLE1BQU0sRUFDVixLQUFLLEVBQUUsRUFBRSxFQUNULE1BQU0sRUFBRSxFQUFFLEdBQ1QsR0FDRyxDQUNOLEVBQ0QsZ0JBQ0MsSUFBSSxFQUFFLElBQUksRUFDVixTQUFTLEVBQUMsNkJBQTZCLEVBQ3ZDLEtBQUssRUFBRSxLQUFLLElBQUksRUFBRSxFQUNsQixRQUFRLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FDeEMsRUFFRCxLQUFLLElBQUksQ0FDVCxpQkFBUSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxZQUNsQyxLQUFDLEtBQUssSUFDTCxHQUFHLEVBQUUsUUFBUSxFQUNiLEdBQUcsRUFBQyxPQUFPLEVBQ1gsS0FBSyxFQUFFLEVBQUUsRUFDVCxNQUFNLEVBQUUsRUFBRSxFQUNWLFNBQVMsRUFBQyxrRkFBa0YsR0FDM0YsR0FDTSxDQUNULElBQ0ksQ0FDTixDQUFDO0FBQ0gsQ0FBQyJ9