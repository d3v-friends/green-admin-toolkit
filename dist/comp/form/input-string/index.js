"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, } from "react";
import { fnCss } from "nextjs-tools";
import Image from "next/image";
import ImgCross from "web-asset/svg/regular/fi-rr-cross.svg";
export default function ({ placeholder = "", imgSrc, regexp, invalidMessage, defaultValue = "", onChange = () => { }, onKeyEnter = () => { }, name, disabled, className = "", autoComplete, inputMode, type, required, label, }) {
    const [invalid, setInvalid] = useState(false);
    const [value, setValue] = useState(defaultValue);
    const [focus, setFocus] = useState(false);
    const onKeyDownHandler = (e) => {
        if (e.key !== "Enter")
            return;
        onKeyEnter(value);
    };
    const onChangeHandler = (e) => {
        onChange(e.target.value);
        setValue(e.target.value);
        setInvalid(!new RegExp(regexp || "").test(e.target.value));
    };
    return (_jsxs("div", { className: className, children: [label && _jsx("p", { className: "mb-[-5px]", children: label }), _jsxs("div", { className: fnCss.sum("flex items-center border-all rounded-md h-[2.5rem] overflow-hidden", focus ? "border-(--primary)" : "", invalid && value ? "border-(--danger)" : ""), children: [imgSrc && (_jsx("div", { className: fnCss.sum("border-right h-full flex pl-2 pr-2", disabled ? "bg-(--dark)" : "bg-(--primary)", focus ? "border-(--primary)" : ""), children: _jsx(Image, { className: fnCss.sum("no-drag", disabled ? "filter-(--dark-alt-filter)" : "filter-(--primary-alt-filter)"), src: imgSrc, alt: "icon", width: 25, height: 25 }) })), _jsx("div", { className: "grow", children: _jsx("input", { placeholder, disabled, name, autoComplete, inputMode, type, required, onChange: onChangeHandler, className: "outline-none w-full pl-2 pr-2", onKeyDown: onKeyDownHandler, onFocus: () => setFocus(true), onBlur: () => setFocus(false), value: value, title: invalidMessage }) }), value && (_jsx(Image, { src: ImgCross, alt: "clear", width: 20, height: 20, onClick: () => {
                            setValue("");
                            onChange("");
                        }, className: "no-drag mr-2 w-[0.7rem] filter-(--text-2-filter) hover:filter-(--primary-filter)" }))] }), _jsx("div", { className: "min-h-[1.5rem] pl-2 text-(--danger)", children: invalid && invalidMessage })] }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcC9mb3JtL2lucHV0LXN0cmluZy9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOztBQUNiLE9BQWMsRUFNYixRQUFRLEdBQ1IsTUFBTSxPQUFPLENBQUM7QUFDZixPQUFPLEVBQVMsS0FBSyxFQUFpQyxNQUFNLGNBQWMsQ0FBQztBQUMzRSxPQUFPLEtBQUssTUFBTSxZQUFZLENBQUM7QUFDL0IsT0FBTyxRQUFRLE1BQU0sdUNBQXVDLENBQUM7QUFvQjdELE1BQU0sQ0FBQyxPQUFPLFdBQVcsRUFDeEIsV0FBVyxHQUFHLEVBQUUsRUFDaEIsTUFBTSxFQUNOLE1BQU0sRUFDTixjQUFjLEVBQ2QsWUFBWSxHQUFHLEVBQUUsRUFDakIsUUFBUSxHQUFHLEdBQUcsRUFBRSxHQUFFLENBQUMsRUFDbkIsVUFBVSxHQUFHLEdBQUcsRUFBRSxHQUFFLENBQUMsRUFDckIsSUFBSSxFQUNKLFFBQVEsRUFDUixTQUFTLEdBQUcsRUFBRSxFQUNkLFlBQVksRUFDWixTQUFTLEVBQ1QsSUFBSSxFQUNKLFFBQVEsRUFDUixLQUFLLEdBQ1k7SUFDakIsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUMsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDakQsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFMUMsTUFBTSxnQkFBZ0IsR0FBMkMsQ0FBQyxDQUFDLEVBQUUsRUFBRTtRQUN0RSxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssT0FBTztZQUFFLE9BQU87UUFDOUIsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25CLENBQUMsQ0FBQztJQUVG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