"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useState, } from "react";
import { fnCss } from "nextjs-tools";
import Image from "next/image";
import ImgCross from "web-asset/svg/regular/fi-rr-cross.svg";
export default function ({ placeholder = "", imgSrc, regexp, invalidMessage, defaultValue = "", onChange = () => { }, onKeyEnter = () => { }, name, disabled, className = "", autoComplete, inputMode, type, required, label, inputParser = (e) => e.target.value, }) {
    const [invalid, setInvalid] = useState(false);
    const [value, setValue] = useState(defaultValue);
    const [focus, setFocus] = useState(false);
    useEffect(() => {
        setValue(defaultValue);
    }, [defaultValue]);
    const onKeyDownHandler = (e) => {
        if (e.key !== "Enter")
            return;
        onKeyEnter(value);
    };
    const onChangeHandler = (e) => {
        const str = inputParser(e);
        onChange(str);
        setValue(str);
        setInvalid(!new RegExp(regexp || "").test(str));
    };
    return (_jsxs("div", { className: className, children: [label && _jsx("p", { className: "mb-[-5px]", children: label }), _jsxs("div", { className: fnCss.sum("flex items-center border-all rounded-md h-[2.5rem] overflow-hidden", focus ? "border-(--primary)" : "", invalid && value ? "border-(--danger)" : ""), children: [imgSrc && (_jsx("div", { className: fnCss.sum("border-right h-full flex pl-2 pr-2", disabled ? "bg-(--dark)" : "bg-(--primary)", focus ? "border-(--primary)" : ""), children: _jsx(Image, { className: fnCss.sum("no-drag", disabled ? "filter-(--dark-alt-filter)" : "filter-(--primary-alt-filter)"), src: imgSrc, alt: "icon", width: 25, height: 25 }) })), _jsx("div", { className: "grow", children: _jsx("input", { placeholder, disabled, name, autoComplete, inputMode, type, required, onChange: onChangeHandler, className: "outline-none w-full pl-2 pr-2", onKeyDown: onKeyDownHandler, onFocus: () => setFocus(true), onBlur: () => setFocus(false), value: value, title: invalidMessage }) }), value && (_jsx(Image, { src: ImgCross, alt: "clear", width: 20, height: 20, onClick: () => {
                            setValue("");
                            onChange("");
                        }, className: "no-drag mr-2 w-[0.7rem] filter-(--text-2-filter) hover:filter-(--primary-filter)" }))] }), _jsx("div", { className: "min-h-[1.5rem] pl-2 text-(--danger)", children: invalid && invalidMessage })] }));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcC9mb3JtL2lucHV0LXN0cmluZy9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOztBQUNiLE9BQWMsRUFNYixTQUFTLEVBQ1QsUUFBUSxHQUNSLE1BQU0sT0FBTyxDQUFDO0FBQ2YsT0FBTyxFQUFTLEtBQUssRUFBaUMsTUFBTSxjQUFjLENBQUM7QUFDM0UsT0FBTyxLQUFLLE1BQU0sWUFBWSxDQUFDO0FBQy9CLE9BQU8sUUFBUSxNQUFNLHVDQUF1QyxDQUFDO0FBc0I3RCxNQUFNLENBQUMsT0FBTyxXQUFXLEVBQ3hCLFdBQVcsR0FBRyxFQUFFLEVBQ2hCLE1BQU0sRUFDTixNQUFNLEVBQ04sY0FBYyxFQUNkLFlBQVksR0FBRyxFQUFFLEVBQ2pCLFFBQVEsR0FBRyxHQUFHLEVBQUUsR0FBRSxDQUFDLEVBQ25CLFVBQVUsR0FBRyxHQUFHLEVBQUUsR0FBRSxDQUFDLEVBQ3JCLElBQUksRUFDSixRQUFRLEVBQ1IsU0FBUyxHQUFHLEVBQUUsRUFDZCxZQUFZLEVBQ1osU0FBUyxFQUNULElBQUksRUFDSixRQUFRLEVBQ1IsS0FBSyxFQUNMLFdBQVcsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQ2xCO0lBQ2pCLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2pELE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRTFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7UUFDZCxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDeEIsQ0FB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